"use strict";(self.webpackChunk_grams_dev_wiki=self.webpackChunk_grams_dev_wiki||[]).push([[8599],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,b=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return n?a.createElement(b,o(o({ref:t},d),{},{components:n})):a.createElement(b,o({ref:t},d))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9772:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:1},o="The Subject Model",l={unversionedId:"develop/subjects/specification/model",id:"develop/subjects/specification/model",title:"The Subject Model",description:"Dive deep into the heart of Grams: Subjects. These dynamic entities represent the very essence of decentralized subject-oriented programming in the Grams ecosystem, architecturally designed to interlace seamlessly with the diverse world of Solidity and beyond.",source:"@site/docs/develop/subjects/specification/model.md",sourceDirName:"develop/subjects/specification",slug:"/develop/subjects/specification/model",permalink:"/docs/develop/subjects/specification/model",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"developSidebar",previous:{title:"Subject Specification",permalink:"/docs/develop/subjects/specification/"},next:{title:"Types",permalink:"/docs/develop/subjects/specification/types/"}},s={},c=[{value:"\ud83e\uddf1 Structure of a Subject",id:"-structure-of-a-subject",level:2},{value:"\ud83c\udf10 Web3 Types in Grams",id:"-web3-types-in-grams",level:2},{value:"\ud83d\udd17 Traits",id:"-traits",level:2},{value:"\ud83d\udcdc Protocol Agnostic Design",id:"-protocol-agnostic-design",level:2},{value:"\ud83d\ude80 Takeaways",id:"-takeaways",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"the-subject-model"},"The Subject Model"),(0,r.kt)("p",null,"Dive deep into the heart of Grams: Subjects. These dynamic entities represent the very essence of decentralized subject-oriented programming in the Grams ecosystem, architecturally designed to interlace seamlessly with the diverse world of Solidity and beyond."),(0,r.kt)("h2",{id:"-structure-of-a-subject"},"\ud83e\uddf1 Structure of a Subject"),(0,r.kt)("p",null,"At its core, a Subject in Grams is a modular unit, encapsulating specific behaviors, state, and logic. It's the cornerstone for creating interoperable building blocks in decentralized applications."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Component"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Identifier"),(0,r.kt)("td",{parentName:"tr",align:null},"A unique descriptor consisting of a name and version, ensuring easy referencing and versioning.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"State"),(0,r.kt)("td",{parentName:"tr",align:null},"The innate attributes or data tied to the subject, representing its current status.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Behaviors"),(0,r.kt)("td",{parentName:"tr",align:null},"Actions or methods that map directly to functionalities, often linked to Solidity functions.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Triggers"),(0,r.kt)("td",{parentName:"tr",align:null},"Events that the subject can initiate, akin to blockchain-driven notifications.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscriptions"),(0,r.kt)("td",{parentName:"tr",align:null},"Allows the subject to stay updated or respond to specific events or triggers.")))),(0,r.kt)("h2",{id:"-web3-types-in-grams"},"\ud83c\udf10 Web3 Types in Grams"),(0,r.kt)("p",null,"Grams brings forth foundational types that resonate with standard Ethereum types, ensuring smooth transition and compatibility."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Address"),(0,r.kt)("td",{parentName:"tr",align:null},"Denotes Ethereum addresses, facilitating transactions and identity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents large integers, commonly used for token balances and calculations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Bytes32"),(0,r.kt)("td",{parentName:"tr",align:null},"Fixed-size byte arrays, often employed for cryptographic hashes and secure operations.")))),(0,r.kt)("h2",{id:"-traits"},"\ud83d\udd17 Traits"),(0,r.kt)("p",null,"Traits define the inherent characteristics or behaviors a subject or its components can exhibit. They offer cues on how the subject operates or interacts within the decentralized framework. Use a combination of existing traits or create your own!"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Trait"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Solidity Equivalent"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Payable"),(0,r.kt)("td",{parentName:"tr",align:null},"Enables the subject to engage in Ether transactions."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"payable")," modifier")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"View"),(0,r.kt)("td",{parentName:"tr",align:null},"Designates the function as read-only, ensuring state consistency."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"view")," modifier")))),(0,r.kt)("h2",{id:"-protocol-agnostic-design"},"\ud83d\udcdc Protocol Agnostic Design"),(0,r.kt)("p",null,"Crafted with a vision for the future, Subjects use an Interface Definition Language (IDL) or JSON AST. This design choice makes them not just adaptable to current technologies but also future-ready. It ensures compatibility across various protocols and allows for easy generation of client-side packages and contracts in Solidity, with a roadmap laid out for WebAssembly."),(0,r.kt)("h2",{id:"-takeaways"},"\ud83d\ude80 Takeaways"),(0,r.kt)("p",null,"Grams Subjects herald a new age in decentralized application design. They provide a robust, scalable, and intuitive framework that dovetails perfectly with Solidity, unlocking a realm of possibilities in Ethereum's smart contract world. With Subjects, developers are equipped with the tools to craft, scale, and innovate, driving the next generation of decentralized marvels."))}u.isMDXComponent=!0}}]);